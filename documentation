Phoronix Test Suite Automation
==============================

Welcome to the Phoronix Test Suite Automation project! This project automates the setup and execution of the Phoronix Test Suite (PTS) for benchmarking. It includes a Makefile with various targets to streamline the process of installing prerequisites, configuring test runs, saving configurations, running tests, and cleaning up results.

Description
-----------
•  pts/nginx		: This benchmark measures the performance of the Nginx web server, focusing on handling concurrent web requests, throughput, and response times.

•  pts/pgbench		: Pgbench is a benchmarking tool for PostgreSQL. It simulates various database operations to measure the performance of PostgreSQL databases, focusing on transaction processing performance.

•  pts/pgbench          : Stress NG is a tool for stress testing a computer system. It loads and exercises various components (CPU, memory, I/O, etc.) to assess system stability and performance under heavy load.

•  pts/redis		: The Redis benchmark evaluates the performance of Redis, an in-memory data structure store. It measures throughput and latency for various data operations. 

•  pts/openssl		: The OpenSSL benchmark evaluates the cryptographic performance of a system by testing the speed of various encryption and decryption operations.

•  pts/sysbench		: Sysbench is a multi-purpose benchmark tool used to evaluate the performance of the CPU, memory, I/O, and database systems. It is commonly used for MySQL performance testing.

•  pts/pennant		: Pennant is a benchmark tool for assessing high-performance computing (HPC) systems. It focuses on computational fluid dynamics (CFD) and other scientific computing workloads.

•  pts/memcached	: The Memcached benchmark evaluates the performance of Memcached, a distributed memory caching system. It measures the speed of storing and retrieving data from the cache.

Getting Started
---------------

Follow the instructions below to set up and use the automation scripts.

Prerequisites
-------------

Ensure you have `make` installed on your system. The Makefile will handle the rest of the dependencies based on your Linux distribution.

Makefile Targets
----------------

make install
------------

This target installs all the prerequisite packages required for running the Phoronix Test Suite. It detects your Linux distribution and installs the necessary packages accordingly. Additionally, it downloads and installs the Phoronix Test Suite.

Usage:

    make install

Details:

- Detects the Linux distribution (Ubuntu, CentOS, Rocky).
- Installs packages such as `sshpass`, `git`, `gcc`, `make`, and others.
- Downloads the Phoronix Test Suite tarball to `/tmp/`.
- Extracts and installs the Phoronix Test Suite.

make config
-----------

This target opens a configuration menu where you can select the test parameters for the Phoronix Test Suite. It uses `kconfig` to provide a user-friendly interface for configuration.

Usage:

    make config

Details:

- Opens a menu to configure test parameters.
- Saves the configuration to a `.config` file.

make saveconfig
---------------

This target extracts the selected configuration options from the `.config` file and saves them into a `.config.options` file. This file is used to pass the configuration options to the test script.

Usage:

    make saveconfig

Details:

- Reads the `.config` file.
- Extracts selected options and formats them into a `.config.options` file.

make run
--------

This target runs the Phoronix Test Suite with the configurations specified in the `.config.options` file. It ensures that the tests are executed according to the selected parameters.

Usage:

    make run

Details:

- Checks if `CONFIG_NGINX=y` is set in the `.config` file.
- Runs the test script `pts_nginx.sh` with the specified configurations.

make saveresult
---------------

This target saves the results of the tests conducted using the Phoronix Test Suite. It ensures that all test results are stored in a specified format for future reference and analysis.

Usage:

    make saveresult

Details:

- Saves the test results to a designated results directory.
- Results are stored in a structured format (e.g., JSON, XML).
- Ensures that the results are easily accessible for review and comparison.

make showresult
---------------

This target displays the results of the tests conducted using the Phoronix Test Suite. It provides a user-friendly interface to view and analyze the test outcomes.

Usage:

    make showresult

Details:

- Opens a viewer to display the test results.
- Allows for filtering and sorting of results based on various parameters.
- Provides detailed insights and summaries of the test performance.

make clean
----------

This target cleans up the test results generated by the Phoronix Test Suite. It removes the test results directory to free up space and keep the environment clean.

Usage:

    make clean

Details:

- Deletes the files in `.phoronix-test-suite/test-results` directory except tar files.

Author
------

- Name: Hemanth Selam
- Email: hemanth.selam@gmail.com
